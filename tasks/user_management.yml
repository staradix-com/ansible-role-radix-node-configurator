# Make sure the radix_user exists
- name: Create radix_user
  user:
    name: "{{ radix_user }}"
    groups: "sudo"
    state: present
    shell: "/bin/bash"

# Set radix_network_node variable to prep the environment file
- name: Set radix_network_node variable when radix_node_region is set to asia-sout
  set_fact:
    radix_network_node: "{{ radix_node_asia_pacific }}"
  when: radix_node_region == "asia-south"

- name: Set radix_network_node variable when radix_node_region is set to asia-sout-east
  set_fact:
    radix_network_node: "{{ radix_node_asia_pacific_south }}"
  when: radix_node_region == "asia-south-east"

- name: Set radix_network_node variable when radix_node_region is set to eu-west
  set_fact:
    radix_network_node: "{{ radix_node_eu_west }}"
  when: radix_node_region == "eu-west"

- name: Set radix_network_node variable when radix_node_region is set to us-east
  set_fact:
    radix_network_node: "{{ radix_node_us_east }}"
  when: radix_node_region == "us-east"

# Sudo access for radix_user
- name: Allow sudo users to sudo without a password
  copy:
    dest: "/etc/sudoers.d/{{ radix_user }}"
    mode: 0440
    content: "{{ radix_user }} ALL=(ALL) NOPASSWD: ALL"

# Determine what file to use for the environment file
- name: Check if .zshrc.local exists
  stat:
    path: "/home/{{ radix_user }}/.zshrc.local"
  register: stat_result

- name: Check if .bash_aliases exists
  stat:
    path: "/home/{{ radix_user }}/.bash_aliases"
  register: stat_result_2

# ZSH Setup
# When .zshrc.local does not exist:
- name: Export environment variables
  template:
    src: "templates/.environment.j2"
    dest: "/home/{{ radix_user }}/.zshrc.local"
    owner: "{{ radix_user }}"
    group: "{{ radix_user }}"
    mode: 0600
    remote_src: false
  when: not stat_result.stat.exists
  become: true
  become_user: "{{ radix_user }}"

# When .zshrc.local does exist:
- template:
    src: "templates/.environment.j2"
    dest: "/home/{{ radix_user }}/.radix_passwords"
    owner: "{{ radix_user }}"
    group: "{{ radix_user }}"
  when: stat_result.stat.exists

- name: "Append Radix passwords to .zshrc.local"
  shell: "cat /home/{{ radix_user }}/.radix_passwords >> /home/{{ radix_user }}/.zshrc.local"
  args:
    chdir: "/home/{{ radix_user }}"
  when: stat_result.stat.exists
  become: true
  become_user: "{{ radix_user }}"

# Bash setup
# When .bash_aliases does not exist:
- name: Export environment variables
  template:
    src: "templates/.environment.j2"
    dest: "/home/{{ radix_user }}/.bash_aliases"
    owner: "{{ radix_user }}"
    group: "{{ radix_user }}"
    mode: 0600
    remote_src: false
  when: not stat_result_2.stat.exists
  become: true
  become_user: "{{ radix_user }}"

# When .bash_aliases does exist:
- template:
    src: "templates/.environment.j2"
    dest: "/home/{{ radix_user }}/.bash_aliases_prep"
    owner: "{{ radix_user }}"
    group: "{{ radix_user }}"
  when: stat_result_2.stat.exists

- name: "Append Radix passwords to .zshrc.local"
  shell: "cat /home/{{ radix_user }}/.bash_aliases_prep >> /home/{{ radix_user }}/.zshrc.local"
  args:
    chdir: "/home/{{ radix_user }}"
  when: stat_result_2.stat.exists
  become: true
  become_user: "{{ radix_user }}"